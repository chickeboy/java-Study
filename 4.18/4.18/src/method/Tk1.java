package method;

/*
 * 方法:重点和难点
 * 其他语言中所提到的函数
 * 解决一个问题的工具
 * 当你发现一段代码逻辑可以多次反复执行，但是每次
 * 结果不同，逻辑相同，这个时候可以使用方法的封装
 */
public class Tk1 {
	public static void main(String[] args) {
		getSum(4, 5);// 4 ,5 实际参数 实参
		// 调用者在使用方法的时候，一定要根据方法的定义来
		// 严格按照参数列表传值 类型，个数，顺序
		System.out.println();
		getSum(3, 2);
	}

	// 方法的定义：创建一个方法，编写好实现的逻辑
	// 访问修饰符 static 返回值类型 方法名 (参数列表){
	// 执行代码;
	// }静态方法，动态方法
	// 静态方法，在同一个类，被main函数调用的函数都是静态函数
	public static void getSum(int a, int b) {
		// int a = 5 int b = 4
		// 形参的值是由调用者的实参提供

		// int a int b 形式参数 形参，使用这个方法必须
		// 传入2个int类型的值
		// (参数列表)可以让调用者和被调用者发生数据传输关系
		// 调用者 -> 被调用者
		// 方法的返回值最终是提供给调用者的
//		int a = 1;
//		int b = 2;
		int c = a + b;
		System.out.println(a + "+" + b + "=" + c + "d");
	}
	// 方法写在那里是没有用的，一定要去调用它才会执行
	/*
	 * 方法中的变量都是局部变量，临时变量 方法不调用，这些变量不存在，方法执行完，变量消失
	 */
}
