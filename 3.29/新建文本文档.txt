1.理解面向对象
	结构化程序设计（面向过程）
		oop（面向对象程序设计）
		程序 = 对象+对象+。。。
		数据第一，算法第二
		让每一个对象负责执行一组相关的任务
	面向对象编程的特性
		万物皆对象
		程序是一组对象彼此之间在发送消息
		每个对象都有自己的内存占用，可以组装成更大对象
		每个对象都有自己的类型，特定类型的所有对象可以接收相同消息     
2.类个对象的概念、区别和联系
	类
		类是创建对象的模板和蓝图
		类是一组类似对象的共同抽象定义
	对象
		对象是实例化结果
		对象是实实在在的存在，代表现实世界某一事物
	对象的两个关键特性
		行为：对象能干什么（对象的行为能改变对象的状态）
		状态：对象的属性，行为的结果
	区别
		类是静态定义
		对象是动态实例
		程序代码操作的是对象而非类
		建模得到的是类而非对象
	 联系
		类是对象的定义
		对象的产生离不开类这个模板
		类存在的目的是实例化得到的对象
3.类的建模：抽象和封装的过程
	定义一个类的步骤
		定义类名
		编写类的字段代表属性
		编写类的方法代表行为
	类的建模是一个抽象和封装的过程
		抽象：去掉不关注的、次要的信息而保留重要的信息
		封装：信息打包
			简单来讲：讲抽象出来的属性和行为包装在一个类中
4.创建并使用对象
	使用成员变量“.”操作对象
		给对象赋值
			对象名、属性
		对对象发送消息即调用方法
			对象名.方法（）
	示例
		Example e = new Example();
		e.field1 = 100;
		e.field2 = 200.0;
		System.out.println("e.toString()")
5.方法的定义和调用
	把方法当作一个模块完成某个特定的功能，并返回处理的结果
	方法分类
		返回值为空（void）的方法
		带具体返回类型的方法
		不带参数的方法
		带参数的方法
	方法的返回值
		如果方法有返回值，方法中必须使用关键字return返回该值，返回值类型为该方法所定义的返回值类型
		强调：方法内可以调用其他方法
6.方法的调用
	java调用参数的方法采用的值传递方式
		如果参数是基本数控类型，参数传递是将参数的数值传递给方法
		
		
		   ▄▌   ▒▄     ░    ▐▄██████ 
   █▄▌   ██     ▒   ███▀▄███ ░  
   ███▄  ██    ▓▌▐██ ▐████▌█▄ 
   ▐██▀▄ ▓██   ▐█▄█  ████▓ ██▓█▄    
  ▐▄███ ██▒█▄  ██▓  ████▓ ██████ 
  ████▌ ██░██▌▐█▓ ████▓ ███████
  ████     ▐█▌▐████▓▌███▓ ██████  
  ████      ▐█▌▐████▌▀████ █▄▀██ 
  ████     ▐█▌▐█████▒█▄▀██▀▀  
   ████   ██▌▐█████▌▐████   
    ██   ▄█▄████████▒████   
     ▀ ▄▀▓██▀▀░▄█████▒████ 
    ▄██████████████ ████
   ████▀▄███████████  ████ 
 ████▌▐████████████░  ███░ 
█████  █████████████░  ███░
█████  ██████████████▄ ███ 
█████▌▐██████████████ ███
██████▄▀██████████████ ▀█ 
 ███████  ▀██████████▀  ▄▀ 
 ▐███████   ▀███████▀ ▄█▀ █▄ 
   ▀▓███▄▄▄▄ ▀███▀▀ ▄█▀ ▄████▄ 
	

                